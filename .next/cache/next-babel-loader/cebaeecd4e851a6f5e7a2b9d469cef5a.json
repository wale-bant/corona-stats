{"ast":null,"code":"import { useState, useEffect } from 'react';\nexport default function useStats(url) {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: stats,\n    1: setStats\n  } = useState();\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      setError(null);\n\n      try {\n        const data = await fetch(url);\n        const response = await data.jon();\n        setStats(response);\n      } catch (error) {\n        setError(error);\n      }\n\n      setLoading(false);\n    }\n\n    fetchData();\n    return () => {};\n  }, [url]);\n  return {\n    loading,\n    error,\n    stats\n  };\n}","map":{"version":3,"sources":["/home/icode/Codebase/Personal/Nextjs/corona-stats/components/useStats.js"],"names":["useState","useEffect","useStats","url","loading","setLoading","error","setError","stats","setStats","fetchData","data","fetch","response","jon"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACpC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeS,SAAf,GAA2B;AACzBL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,UAAI;AACF,cAAMI,IAAI,GAAG,MAAMC,KAAK,CAACT,GAAD,CAAxB;AACA,cAAMU,QAAQ,GAAG,MAAMF,IAAI,CAACG,GAAL,EAAvB;AACAL,QAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,OAJD,CAIE,OAAOP,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AACDD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AAEDK,IAAAA,SAAS;AACT,WAAO,MAAM,CAAE,CAAf;AACD,GAhBQ,EAgBN,CAACP,GAAD,CAhBM,CAAT;AAkBA,SAAO;AAAEC,IAAAA,OAAF;AAAWE,IAAAA,KAAX;AAAkBE,IAAAA;AAAlB,GAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function useStats(url) {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [stats, setStats] = useState();\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await fetch(url);\n        const response = await data.jon();\n        setStats(response);\n      } catch (error) {\n        setError(error);\n      }\n      setLoading(false);\n    }\n\n    fetchData();\n    return () => {};\n  }, [url]);\n\n  return { loading, error, stats };\n}\n"]},"metadata":{},"sourceType":"module"}