{"ast":null,"code":"import { useState, useEffect } from 'react';\nexport default function useDailyStats(url) {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: stats,\n    1: setStats\n  } = useState();\n  const dayNow = new Date().getDate();\n  const month = new Date().getMonth() + 1;\n  const dateNow = `2020/0${month}/${dayNow}`;\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      setError(null);\n\n      try {\n        const data = await fetch(url);\n        const response = await data.json();\n        response.map(day => {\n          if (day.reportDateString === dateNow) {\n            setStats(2);\n          }\n        });\n      } catch (error) {\n        setError(error);\n      }\n\n      setLoading(false);\n    }\n\n    fetchData();\n    return () => {}; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return {\n    loading,\n    error,\n    stats\n  };\n}","map":{"version":3,"sources":["/home/icode/Codebase/Personal/Nextjs/corona-stats/components/useDailyStats.js"],"names":["useState","useEffect","useDailyStats","url","loading","setLoading","error","setError","stats","setStats","dayNow","Date","getDate","month","getMonth","dateNow","fetchData","data","fetch","response","json","map","day","reportDateString"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AACzC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,EAAlC;AAEA,QAAMU,MAAM,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAf;AACA,QAAMC,KAAK,GAAG,IAAIF,IAAJ,GAAWG,QAAX,KAAwB,CAAtC;AACA,QAAMC,OAAO,GAAI,SAAQF,KAAM,IAAGH,MAAO,EAAzC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAee,SAAf,GAA2B;AACzBX,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,UAAI;AACF,cAAMU,IAAI,GAAG,MAAMC,KAAK,CAACf,GAAD,CAAxB;AACA,cAAMgB,QAAQ,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAvB;AAEAD,QAAAA,QAAQ,CAACE,GAAT,CAAaC,GAAG,IAAI;AAClB,cAAIA,GAAG,CAACC,gBAAJ,KAAyBR,OAA7B,EAAsC;AACpCN,YAAAA,QAAQ,CAAC,CAAD,CAAR;AACD;AACF,SAJD;AAKD,OATD,CASE,OAAOH,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AACDD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AAEDW,IAAAA,SAAS;AACT,WAAO,MAAM,CAAE,CAAf,CApBc,CAqBd;AACD,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA,SAAO;AAAEZ,IAAAA,OAAF;AAAWE,IAAAA,KAAX;AAAkBE,IAAAA;AAAlB,GAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function useDailyStats(url) {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [stats, setStats] = useState();\n\n  const dayNow = new Date().getDate();\n  const month = new Date().getMonth() + 1;\n  const dateNow = `2020/0${month}/${dayNow}`;\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await fetch(url);\n        const response = await data.json();\n\n        response.map(day => {\n          if (day.reportDateString === dateNow) {\n            setStats(2);\n          }\n        });\n      } catch (error) {\n        setError(error);\n      }\n      setLoading(false);\n    }\n\n    fetchData();\n    return () => {};\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return { loading, error, stats };\n}\n"]},"metadata":{},"sourceType":"module"}