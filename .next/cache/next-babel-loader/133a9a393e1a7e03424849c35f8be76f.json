{"ast":null,"code":"var _jsxFileName = \"/home/icode/Codebase/Personal/Nextjs/first-app/components/CountryStat.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport useCountryStats from './useCountryStats';\nimport useStats from './useStats';\nexport default function CountryStat() {\n  var _useState = useState('NG'),\n      seleceted = _useState[0],\n      setSeleceted = _useState[1];\n\n  var _useStats = useStats('https://covid19.mathdro.id/api/countries'),\n      loading = _useStats.loading,\n      error = _useStats.error,\n      stats = _useStats.stats;\n\n  var _useCountryStats = useCountryStats(seleceted),\n      countryStats = _useCountryStats.countryStats;\n\n  var handleChange = function handleChange(e) {\n    return setSeleceted(e.target.value);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"select\", {\n    onChange: handleChange,\n    value: seleceted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, (stats === null || stats === void 0 ? void 0 : stats.countries) && Object.entries(stats.countries).map(function (country, i) {\n    return __jsx(\"option\", {\n      value: country[1],\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, country[0]);\n  })), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Confirmed: \", countryStats.confirmed.value), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Recovered: \", countryStats.recovered.value), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Deaths: \", countryStats.deaths.value));\n}","map":{"version":3,"sources":["/home/icode/Codebase/Personal/Nextjs/first-app/components/CountryStat.js"],"names":["React","useState","useEffect","useCountryStats","useStats","CountryStat","seleceted","setSeleceted","loading","error","stats","countryStats","handleChange","e","target","value","countries","Object","entries","map","country","i","confirmed","recovered","deaths"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA,kBACFJ,QAAQ,CAAC,IAAD,CADN;AAAA,MAC7BK,SAD6B;AAAA,MAClBC,YADkB;;AAAA,kBAEFH,QAAQ,CACxC,0CADwC,CAFN;AAAA,MAE5BI,OAF4B,aAE5BA,OAF4B;AAAA,MAEnBC,KAFmB,aAEnBA,KAFmB;AAAA,MAEZC,KAFY,aAEZA,KAFY;;AAAA,yBAKXP,eAAe,CAACG,SAAD,CALJ;AAAA,MAK5BK,YAL4B,oBAK5BA,YAL4B;;AAOpC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC;AAAA,WAAIN,YAAY,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AAAA,GAAtB;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,QAAQ,EAAEH,YAAlB;AAAgC,IAAA,KAAK,EAAEN,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAAI,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEM,SAAP,KACCC,MAAM,CAACC,OAAP,CAAeR,KAAK,CAACM,SAArB,EAAgCG,GAAhC,CAAoC,UAACC,OAAD,EAAUC,CAAV;AAAA,WAClC;AAAQ,MAAA,KAAK,EAAED,OAAO,CAAC,CAAD,CAAtB;AAA2B,MAAA,GAAG,EAAEC,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,OAAO,CAAC,CAAD,CADV,CADkC;AAAA,GAApC,CAFJ,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeT,YAAY,CAACW,SAAb,CAAuBP,KAAtC,CAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeJ,YAAY,CAACY,SAAb,CAAuBR,KAAtC,CAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYJ,YAAY,CAACa,MAAb,CAAoBT,KAAhC,CAZF,CADF;AAgBD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useCountryStats from './useCountryStats';\nimport useStats from './useStats';\n\nexport default function CountryStat() {\n  const [seleceted, setSeleceted] = useState('NG');\n  const { loading, error, stats } = useStats(\n    'https://covid19.mathdro.id/api/countries'\n  );\n  const { countryStats } = useCountryStats(seleceted);\n\n  const handleChange = e => setSeleceted(e.target.value);\n\n  return (\n    <div>\n      <select onChange={handleChange} value={seleceted}>\n        {stats?.countries &&\n          Object.entries(stats.countries).map((country, i) => (\n            <option value={country[1]} key={i}>\n              {country[0]}\n            </option>\n          ))}\n      </select>\n\n      <p>Confirmed: {countryStats.confirmed.value}</p>\n      <p>Recovered: {countryStats.recovered.value}</p>\n      <p>Deaths: {countryStats.deaths.value}</p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}