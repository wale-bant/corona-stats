{"ast":null,"code":"import \"antd/lib/row/style/css\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style/css\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/statistic/style/css\";\nimport _Statistic from \"antd/lib/statistic\";\nimport \"antd/lib/select/style/css\";\nimport _Select from \"antd/lib/select\";\nvar _jsxFileName = \"/home/icode/Codebase/Personal/Nextjs/corona-stats/components/CountryStat.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { ArrowUpOutlined } from '@ant-design/icons';\nimport useCountryStats from './useCountryStats';\nimport useStats from './useStats';\nimport Loading from './Loading';\nvar Option = _Select.Option;\nconsole.log(_Select);\nexport default function CountryStat() {\n  var _countryStats$confirm, _countryStats$recover, _countryStats$deaths;\n\n  var _useState = useState('NG'),\n      seleceted = _useState[0],\n      setSeleceted = _useState[1];\n\n  var _useStats = useStats('https://covid19.mathdro.id/api/countries'),\n      loading = _useStats.loading,\n      error = _useStats.error,\n      stats = _useStats.stats;\n\n  var _useCountryStats = useCountryStats(seleceted),\n      countryStats = _useCountryStats.countryStats;\n\n  var handleChange = function handleChange(value) {\n    return setSeleceted(value);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      marginTop: '1em',\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(_Select, {\n    defaultValue: seleceted,\n    style: {\n      width: 120\n    },\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, (stats === null || stats === void 0 ? void 0 : stats.countries) && Object.entries(stats.countries).map(function (country, i) {\n    return __jsx(Option, {\n      value: country[1],\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, country[0]);\n  })), loading || !countryStats && __jsx(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), countryStats && __jsx(_Row, {\n    gutter: 32,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(_Col, {\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(_Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(_Statistic, {\n    title: \"Confirmed\",\n    value: (_countryStats$confirm = countryStats.confirmed) === null || _countryStats$confirm === void 0 ? void 0 : _countryStats$confirm.value,\n    valueStyle: {\n      color: '#c38755'\n    },\n    prefix: __jsx(ArrowUpOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))), __jsx(_Col, {\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(_Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(_Statistic, {\n    title: \"Recovered\",\n    value: (_countryStats$recover = countryStats.recovered) === null || _countryStats$recover === void 0 ? void 0 : _countryStats$recover.value,\n    valueStyle: {\n      color: '#3f8600'\n    },\n    prefix: __jsx(ArrowUpOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))), __jsx(_Col, {\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(_Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(_Statistic, {\n    title: \"Deaths\",\n    value: (_countryStats$deaths = countryStats.deaths) === null || _countryStats$deaths === void 0 ? void 0 : _countryStats$deaths.value,\n    valueStyle: {\n      color: '#cf1322'\n    },\n    prefix: __jsx(ArrowUpOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })))), error && __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, error));\n}","map":{"version":3,"sources":["/home/icode/Codebase/Personal/Nextjs/corona-stats/components/CountryStat.js"],"names":["React","useState","ArrowUpOutlined","useCountryStats","useStats","Loading","Option","console","log","CountryStat","seleceted","setSeleceted","loading","error","stats","countryStats","handleChange","value","marginTop","textAlign","width","countries","Object","entries","map","country","i","confirmed","color","recovered","deaths"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Statistic, Card, Row, Col, Select } from 'antd';\nimport { ArrowUpOutlined } from '@ant-design/icons';\nimport useCountryStats from './useCountryStats';\nimport useStats from './useStats';\nimport Loading from './Loading';\n\nconst { Option } = Select;\n\nconsole.log(Select);\nexport default function CountryStat() {\n  const [seleceted, setSeleceted] = useState('NG');\n  const { loading, error, stats } = useStats(\n    'https://covid19.mathdro.id/api/countries'\n  );\n  const { countryStats } = useCountryStats(seleceted);\n\n  const handleChange = value => setSeleceted(value);\n\n  return (\n    <div style={{ marginTop: '1em', textAlign: 'center' }}>\n      <Select\n        defaultValue={seleceted}\n        style={{ width: 120 }}\n        onChange={handleChange}\n      >\n        {stats?.countries &&\n          Object.entries(stats.countries).map((country, i) => (\n            <Option value={country[1]} key={i}>\n              {country[0]}\n            </Option>\n          ))}\n      </Select>\n\n      {loading || (!countryStats && <Loading />)}\n      {countryStats && (\n        <Row gutter={32}>\n          <Col span={8}>\n            <Card>\n              <Statistic\n                title=\"Confirmed\"\n                value={countryStats.confirmed?.value}\n                valueStyle={{ color: '#c38755' }}\n                prefix={<ArrowUpOutlined />}\n              />\n            </Card>\n          </Col>\n\n          <Col span={8}>\n            <Card>\n              <Statistic\n                title=\"Recovered\"\n                value={countryStats.recovered?.value}\n                valueStyle={{ color: '#3f8600' }}\n                prefix={<ArrowUpOutlined />}\n              />\n            </Card>\n          </Col>\n\n          <Col span={8}>\n            <Card>\n              <Statistic\n                title=\"Deaths\"\n                value={countryStats.deaths?.value}\n                valueStyle={{ color: '#cf1322' }}\n                prefix={<ArrowUpOutlined />}\n              />\n            </Card>\n          </Col>\n        </Row>\n      )}\n      {error && <h1>{error}</h1>}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}