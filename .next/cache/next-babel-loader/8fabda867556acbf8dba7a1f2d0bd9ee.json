{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\nexport default function useDailyStats(url) {\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState({\n    confirmed: {\n      value: 22\n    },\n    recovered: {\n      value: 22\n    },\n    deaths: {\n      value: 22\n    }\n  }),\n      stats = _useState3[0],\n      setStats = _useState3[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              setError(null);\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (res) {\n                return res.json();\n              })[\"catch\"](function (err) {\n                return setError(err);\n              }));\n\n            case 4:\n              data = _context.sent;\n              setStats(data);\n              setLoading(false);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n    return function () {};\n  }, [url]);\n  return {\n    loading: loading,\n    error: error,\n    stats: stats\n  };\n}","map":{"version":3,"sources":["/home/icode/Codebase/Personal/Nextjs/corona-stats/components/useDailyStats.js"],"names":["useState","useEffect","useDailyStats","url","loading","setLoading","error","setError","confirmed","value","recovered","deaths","stats","setStats","fetchData","fetch","then","res","json","err","data"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AAAA,kBACXH,QAAQ,CAAC,KAAD,CADG;AAAA,MAClCI,OADkC;AAAA,MACzBC,UADyB;;AAAA,mBAEfL,QAAQ,CAAC,IAAD,CAFO;AAAA,MAElCM,KAFkC;AAAA,MAE3BC,QAF2B;;AAAA,mBAGfP,QAAQ,CAAC;AACjCQ,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADsB;AAEjCC,IAAAA,SAAS,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT,KAFsB;AAGjCE,IAAAA,MAAM,EAAE;AAAEF,MAAAA,KAAK,EAAE;AAAT;AAHyB,GAAD,CAHO;AAAA,MAGlCG,KAHkC;AAAA,MAG3BC,QAH2B;;AASzCZ,EAAAA,SAAS,CAAC,YAAM;AACd,aAAea,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACET,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,cAAAA,QAAQ,CAAC,IAAD,CAAR;AAFF;AAAA,+CAGqBQ,KAAK,CAACZ,GAAD,CAAL,CAChBa,IADgB,CACX,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eADQ,WAEV,UAAAC,GAAG;AAAA,uBAAIZ,QAAQ,CAACY,GAAD,CAAZ;AAAA,eAFO,CAHrB;;AAAA;AAGQC,cAAAA,IAHR;AAMEP,cAAAA,QAAQ,CAACO,IAAD,CAAR;AACAf,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUAS,IAAAA,SAAS;AACT,WAAO,YAAM,CAAE,CAAf;AACD,GAbQ,EAaN,CAACX,GAAD,CAbM,CAAT;AAeA,SAAO;AAAEC,IAAAA,OAAO,EAAPA,OAAF;AAAWE,IAAAA,KAAK,EAALA,KAAX;AAAkBM,IAAAA,KAAK,EAALA;AAAlB,GAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function useDailyStats(url) {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [stats, setStats] = useState({\n    confirmed: { value: 22 },\n    recovered: { value: 22 },\n    deaths: { value: 22 },\n  });\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      setError(null);\n      const data = await fetch(url)\n        .then(res => res.json())\n        .catch(err => setError(err));\n      setStats(data);\n      setLoading(false);\n    }\n\n    fetchData();\n    return () => {};\n  }, [url]);\n\n  return { loading, error, stats };\n}\n"]},"metadata":{},"sourceType":"module"}