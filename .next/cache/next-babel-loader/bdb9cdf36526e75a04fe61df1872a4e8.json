{"ast":null,"code":"import \"antd/lib/row/style/css\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style/css\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/statistic/style/css\";\nimport _Statistic from \"antd/lib/statistic\";\nimport \"antd/lib/spin/style/css\";\nimport _Spin from \"antd/lib/spin\";\nvar _jsxFileName = \"/home/icode/Codebase/Personal/Nextjs/corona-stats/components/DailySummary.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport useDailyStats from './useDailyStats';\nexport default function DailySummary() {\n  var _useState = useState(),\n      dailyStats = _useState[0],\n      setDailyStats = _useState[1];\n\n  var _useDailyStats = useDailyStats('https://covid19.mathdro.id/api/daily'),\n      loading = _useDailyStats.loading,\n      error = _useDailyStats.error,\n      stats = _useDailyStats.stats;\n\n  if (loading) {\n    return __jsx(_Spin, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    });\n  }\n\n  Object.entries(stats).filter(function (day) {\n    var dayNow = new Date().getDate();\n    var month = new Date().getMonth() + 1;\n\n    if (day[1].reportDateString === \"2020/0\".concat(month, \"/\").concat(dayNow)) {\n      setDailyStats(day[1]);\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(Title, {\n    level: 4,\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Daily Summary\"), __jsx(_Row, {\n    gutter: 32,\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(_Col, {\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(_Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(_Statistic, {\n    title: \"Confirmed\",\n    value: dailyStats === null || dailyStats === void 0 ? void 0 : dailyStats.deltaConfirmed,\n    valueStyle: {\n      color: '#c38755'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))), __jsx(_Col, {\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(_Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(_Statistic, {\n    title: \"Recovered\",\n    value: dailyStats === null || dailyStats === void 0 ? void 0 : dailyStats.deltaRecovered,\n    valueStyle: {\n      color: '#3f8600'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/home/icode/Codebase/Personal/Nextjs/corona-stats/components/DailySummary.js"],"names":["React","useState","useDailyStats","DailySummary","dailyStats","setDailyStats","loading","error","stats","Object","entries","filter","day","dayNow","Date","getDate","month","getMonth","reportDateString","textAlign","deltaConfirmed","color","deltaRecovered"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA,kBACDF,QAAQ,EADP;AAAA,MAC9BG,UAD8B;AAAA,MAClBC,aADkB;;AAAA,uBAEHH,aAAa,CAC7C,sCAD6C,CAFV;AAAA,MAE7BI,OAF6B,kBAE7BA,OAF6B;AAAA,MAEpBC,KAFoB,kBAEpBA,KAFoB;AAAA,MAEbC,KAFa,kBAEbA,KAFa;;AAMrC,MAAIF,OAAJ,EAAa;AACX,WAAO;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAEDG,EAAAA,MAAM,CAACC,OAAP,CAAeF,KAAf,EAAsBG,MAAtB,CAA6B,UAAAC,GAAG,EAAI;AAClC,QAAMC,MAAM,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAf;AACA,QAAMC,KAAK,GAAG,IAAIF,IAAJ,GAAWG,QAAX,KAAwB,CAAtC;;AAEA,QAAIL,GAAG,CAAC,CAAD,CAAH,CAAOM,gBAAP,qBAAqCF,KAArC,cAA8CH,MAA9C,CAAJ,EAA4D;AAC1DR,MAAAA,aAAa,CAACO,GAAG,CAAC,CAAD,CAAJ,CAAb;AACD;AACF,GAPD;AASA,SACE,4BACE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAiB,IAAA,KAAK,EAAE;AAAEO,MAAAA,SAAS,EAAE;AAAb,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAKE;AAAK,IAAA,MAAM,EAAE,EAAb;AAAiB,IAAA,KAAK,EAAE;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,KAAK,EAAEf,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEgB,cAFrB;AAGE,IAAA,UAAU,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAUE;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,KAAK,EAAEjB,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEkB,cAFrB;AAGE,IAAA,UAAU,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAVF,CALF,CADF;AAqCD","sourcesContent":["import React, { useState } from 'react';\nimport { Statistic, Card, Row, Col, Spin } from 'antd';\nimport useDailyStats from './useDailyStats';\n\nexport default function DailySummary() {\n  const [dailyStats, setDailyStats] = useState();\n  const { loading, error, stats } = useDailyStats(\n    'https://covid19.mathdro.id/api/daily'\n  );\n\n  if (loading) {\n    return <Spin size=\"large\" />;\n  }\n\n  Object.entries(stats).filter(day => {\n    const dayNow = new Date().getDate();\n    const month = new Date().getMonth() + 1;\n\n    if (day[1].reportDateString === `2020/0${month}/${dayNow}`) {\n      setDailyStats(day[1]);\n    }\n  });\n\n  return (\n    <>\n      <Title level={4} style={{ textAlign: 'center' }}>\n        Daily Summary\n      </Title>\n\n      <Row gutter={32} style={{ textAlign: 'center' }}>\n        <Col span={8}>\n          <Card>\n            <Statistic\n              title=\"Confirmed\"\n              value={dailyStats?.deltaConfirmed}\n              valueStyle={{ color: '#c38755' }}\n            />\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card>\n            <Statistic\n              title=\"Recovered\"\n              value={dailyStats?.deltaRecovered}\n              valueStyle={{ color: '#3f8600' }}\n            />\n          </Card>\n        </Col>\n        {/* <Col span={8}>\n        <Card>\n          <Statistic\n            title=\"Deaths\"\n            //   value={stats.deaths.value}\n            valueStyle={{ color: '#cf1322' }}\n          />\n        </Card>\n      </Col> */}\n      </Row>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}