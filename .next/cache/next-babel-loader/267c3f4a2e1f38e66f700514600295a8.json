{"ast":null,"code":"var _jsxFileName = \"/home/icode/Codebase/Personal/Nextjs/corona-stats/components/CountryStat.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport useCountryStats from './useCountryStats';\nimport useStats from './useStats';\nimport Loading from './Loading';\nexport default function CountryStat() {\n  const {\n    0: seleceted,\n    1: setSeleceted\n  } = useState('NG');\n  const {\n    loading,\n    error,\n    stats\n  } = useStats('https://covid19.mathdro.id/api/countries');\n  const {\n    countryStats\n  } = useCountryStats(seleceted);\n\n  const handleChange = e => setSeleceted(e.target.value);\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"select\", {\n    onChange: handleChange,\n    value: seleceted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, (stats === null || stats === void 0 ? void 0 : stats.countries) && Object.entries(stats.countries).map((country, i) => __jsx(\"option\", {\n    value: country[1],\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, country[0]))), loading ? __jsx(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }) : __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"stats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Confirmed: \", countryStats.confirmed.value), __jsx(\"p\", {\n    className: \"stats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Recovered: \", countryStats.recovered.value), __jsx(\"p\", {\n    className: \"stats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Deaths: \", countryStats.deaths.value)), error && __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, error));\n}","map":{"version":3,"sources":["/home/icode/Codebase/Personal/Nextjs/corona-stats/components/CountryStat.js"],"names":["React","useState","useEffect","useCountryStats","useStats","Loading","CountryStat","seleceted","setSeleceted","loading","error","stats","countryStats","handleChange","e","target","value","countries","Object","entries","map","country","i","confirmed","recovered","deaths"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAEQ,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA4BP,QAAQ,CACxC,0CADwC,CAA1C;AAGA,QAAM;AAAEQ,IAAAA;AAAF,MAAmBT,eAAe,CAACI,SAAD,CAAxC;;AAEA,QAAMM,YAAY,GAAGC,CAAC,IAAIN,YAAY,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtC;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,QAAQ,EAAEH,YAAlB;AAAgC,IAAA,KAAK,EAAEN,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAAI,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEM,SAAP,KACCC,MAAM,CAACC,OAAP,CAAeR,KAAK,CAACM,SAArB,EAAgCG,GAAhC,CAAoC,CAACC,OAAD,EAAUC,CAAV,KAClC;AAAQ,IAAA,KAAK,EAAED,OAAO,CAAC,CAAD,CAAtB;AAA2B,IAAA,GAAG,EAAEC,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAAC,CAAD,CADV,CADF,CAFJ,CADF,EASGZ,OAAO,GACN,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN,4BACE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiCG,YAAY,CAACW,SAAb,CAAuBP,KAAxD,CADF,EAEE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiCJ,YAAY,CAACY,SAAb,CAAuBR,KAAxD,CAFF,EAGE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA8BJ,YAAY,CAACa,MAAb,CAAoBT,KAAlD,CAHF,CAZJ,EAkBGN,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAL,CAlBZ,CADF;AAsBD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useCountryStats from './useCountryStats';\nimport useStats from './useStats';\nimport Loading from './Loading';\n\nexport default function CountryStat() {\n  const [seleceted, setSeleceted] = useState('NG');\n  const { loading, error, stats } = useStats(\n    'https://covid19.mathdro.id/api/countries'\n  );\n  const { countryStats } = useCountryStats(seleceted);\n\n  const handleChange = e => setSeleceted(e.target.value);\n\n  return (\n    <div>\n      <select onChange={handleChange} value={seleceted}>\n        {stats?.countries &&\n          Object.entries(stats.countries).map((country, i) => (\n            <option value={country[1]} key={i}>\n              {country[0]}\n            </option>\n          ))}\n      </select>\n      {loading ? (\n        <Loading />\n      ) : (\n        <>\n          <p className=\"stats\">Confirmed: {countryStats.confirmed.value}</p>\n          <p className=\"stats\">Recovered: {countryStats.recovered.value}</p>\n          <p className=\"stats\">Deaths: {countryStats.deaths.value}</p>\n        </>\n      )}\n      {error && <h1>{error}</h1>}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}